server.port=8080

spring.data.mongodb.username=${MONGO_USER:}
spring.data.mongodb.password=${MONGO_PASSWD:}
spring.data.mongodb.database=${MONGO_DBNAME:json_cdr}
spring.data.mongodb.port=${MONGO_PORT:27017}
spring.data.mongodb.host=${MONGO_HOST:localhost}
spring.data.mongodb.authentication-database=${MONGO_AUTHDB:admin}
#
app.instance=${APP_INSTANCE:FS-CDR}
app.kafka.enabled=${APP_KAFKA_ENABLED:false}
app.json-cdr.topic=${APP_JSON_CDR_TOPIC:json_cdr}
app.json-cdr.dir=${APP_JSON_CDR_DIR:/var/data/cdr/}
app.json-cdr.backup-dir=${app.json-cdr.dir:/tmp/}backup
app.json-cdr.import-cron=${APP_JSON_CDR_IMPORT_CRON:0/5 * * * * *}
app.json-cdr.remove-after-import=${APP_JSON_CDR_REMOVE_AFTER_IMPORT:true}
#
#
spring.kafka.client-id=${app.instance}
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL:http://localhost:8081}
spring.kafka.properties.basic.auth.credentials.source=${SCHEMA_REGISTRY_CRED_SOURCE:USER_INFO}
spring.kafka.properties.basic.auth.user.info=${SCHEMA_REGISTRY_USER:}:${SCHEMA_REGISTRY_PASSWORD:}
#
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.security.protocol=${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
spring.kafka.properties.sasl.mechanism=${KAFKA_SECURITY_MECHANISM:PLAIN}
spring.kafka.properties.sasl.jaas.config=${KAFKA_SECURITY_LOGIN_MODULE:} \
  required username="${KAFKA_SECURITY_USERNAME:}" password="${KAFKA_SECURITY_PASSWORD:}";
#
spring.kafka.admin.properties.request.timeout.ms=3000
spring.kafka.producer.properties.request.timeout.ms=3000
#
spring.kafka.properties.default-topic-partitions=${KAFKA_DEFAULT_PARTITIONS:1}
spring.kafka.properties.default-topic-replications=${KAFKA_DEFAULT_REPLICATIONS:1}
#
logging.level.root=info
logging.level.com.metechvn.*=${LOG_LEVEL:info}
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG